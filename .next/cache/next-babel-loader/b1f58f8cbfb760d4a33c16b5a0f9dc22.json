{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { EmptyState, Layout, Page } from \"@shopify/polaris\";\nimport { ResourcePicker, TitleBar } from \"@shopify/app-bridge-react\";\nimport { useState } from \"react\";\nimport store from \"store-js\";\nimport ProductList from \"../componets/ProductList\";\nimport axios from \"axios\";\n\nfunction Index() {\n  _s();\n\n  var _useState = useState({\n    open: false\n  }),\n      modal = _useState[0],\n      setModal = _useState[1];\n\n  var emptyState = !store.get(\"ids\");\n\n  function handleSelection(resources) {\n    // we are using the product ids to display the items\n    var idsFromResources = resources.selection.map(function (product) {\n      return product.id;\n    });\n    setModal({\n      open: false\n    });\n    store.set(\"ids\", idsFromResources); // console.log(\"this is product ids\", store.get(\"ids\"));\n\n    var seletedProducts = resources.selection;\n    deleteApiData();\n    seletedProducts.map(function (product) {\n      return makeApiCall(product);\n    });\n  }\n\n  function deleteApiData() {\n    var url = \"/api/products\";\n    axios[\"delete\"](url);\n  }\n\n  function makeApiCall(_x) {\n    return _makeApiCall.apply(this, arguments);\n  }\n\n  function _makeApiCall() {\n    _makeApiCall = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(products) {\n      var url;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = \"/api/products\";\n              axios.post(url, products).then(function (result) {\n                return console.log(result);\n              })[\"catch\"](function (error) {\n                return console.log(error);\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _makeApiCall.apply(this, arguments);\n  }\n\n  return __jsx(Page, null, __jsx(TitleBar, {\n    primaryAction: {\n      content: \"Select New Product\",\n      onAction: function onAction() {\n        return setModal({\n          open: true\n        });\n      }\n    }\n  }), __jsx(ResourcePicker, {\n    resourceType: \"Product\",\n    showVariants: false,\n    open: modal.open,\n    onCancel: function onCancel() {\n      return setModal({\n        open: false\n      });\n    },\n    onSelection: function onSelection(resources) {\n      return handleSelection(resources);\n    }\n  }), emptyState ? __jsx(Layout, null, __jsx(EmptyState, {\n    heading: \"Manage your inventory transfers\",\n    action: {\n      content: \"Select Products\",\n      onAction: function onAction() {\n        return setModal({\n          open: true\n        });\n      }\n    },\n    image: \"https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg\"\n  }, __jsx(\"p\", null, \"Select Products\"))) : __jsx(ProductList, null));\n}\n\n_s(Index, \"984GhQRaQw7ep3dbd1OWuI8Jcrc=\");\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/Catboy/noSideShopifyApp/pages/index.js"],"names":["EmptyState","Layout","Page","ResourcePicker","TitleBar","useState","store","ProductList","axios","Index","open","modal","setModal","emptyState","get","handleSelection","resources","idsFromResources","selection","map","product","id","set","seletedProducts","deleteApiData","makeApiCall","url","products","post","then","result","console","log","error","content","onAction"],"mappings":"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","sourcesContent":["import { EmptyState, Layout, Page } from \"@shopify/polaris\";\nimport { ResourcePicker, TitleBar } from \"@shopify/app-bridge-react\";\nimport { useState } from \"react\";\nimport store from \"store-js\";\nimport ProductList from \"../componets/ProductList\";\nimport axios from \"axios\";\n\nfunction Index() {\n  const [modal, setModal] = useState({ open: false });\n  const emptyState = !store.get(\"ids\");\n\n   function handleSelection(resources) {\n    // we are using the product ids to display the items\n\n    const idsFromResources = resources.selection.map((product) => product.id);\n    setModal({ open: false });\n    store.set(\"ids\", idsFromResources);\n    // console.log(\"this is product ids\", store.get(\"ids\"));\n    const seletedProducts = resources.selection;\n\n    deleteApiData();\n\n    seletedProducts.map((product) => makeApiCall(product));\n  }\n\n  function deleteApiData(){\n    var url = \"/api/products\";\n\n    axios.delete(url)\n  }\n\n  async function makeApiCall(products) {\n    const url = \"/api/products\";\n\n    axios\n      .post(url, products)\n      .then((result) => console.log(result))\n      .catch((error) => console.log(error));\n  }\n\n  return (\n    <Page>\n      <TitleBar\n        primaryAction={{\n          content: \"Select New Product\",\n          onAction: () => setModal({ open: true }),\n        }}\n      />\n      <ResourcePicker\n        resourceType=\"Product\"\n        showVariants={false}\n        open={modal.open}\n        onCancel={() => setModal({ open: false })}\n        onSelection={(resources) => handleSelection(resources)}\n      />\n      {emptyState ? (\n        <Layout>\n          <EmptyState\n            heading=\"Manage your inventory transfers\"\n            action={{\n              content: \"Select Products\",\n              onAction: () => setModal({ open: true }),\n            }}\n            image=\"https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg\"\n          >\n            <p>Select Products</p>\n          </EmptyState>\n        </Layout>\n      ) : (\n        <ProductList />\n      )}\n    </Page>\n  );\n}\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}